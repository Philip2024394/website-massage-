import React, { useState } from 'react';
import { X, MapPin, Star, Phone, MessageCircle, Clock, DollarSign, Heart } from 'lucide-react';

interface GalleryImage {
    imageUrl: string;
    caption: string;
    description: string;
}

interface Service {
    name: string;
    duration: string;
    price: string;
}

interface Place {
    id?: string | number;
    $id?: string;
    name: string;
    description?: string;
    mainImage?: string;
    location: string;
    whatsappNumber?: string;
    email?: string;
    pricing?: any;
    operatingHours?: string;
    rating?: number;
    reviewCount?: number;
    massageTypes?: any;
    status?: string;
    isLive?: boolean;
}

interface MassagePlaceProfilePageProps {
    place: Place;
    onBack: () => void;
}

const MassagePlaceProfilePage: React.FC<MassagePlaceProfilePageProps> = ({ place, onBack }) => {
    const [expandedImage, setExpandedImage] = useState<GalleryImage | null>(null);
    const [isFavorite, setIsFavorite] = useState(false);
    
    if (!place) {
        return (
            <div className="min-h-screen bg-gray-50 flex items-center justify-center">
                <div className="text-center">
                    <h2 className="text-2xl font-bold text-gray-800 mb-4">Place not found</h2>
                    <button onClick={onBack} className="px-6 py-3 bg-orange-500 text-white rounded-lg">
                        Go Back
                    </button>
                </div>
            </div>
        );
    }

    // Parse pricing data
    const pricing = typeof place.pricing === 'string' ? JSON.parse(place.pricing) : place.pricing || {};
    const priceValues = Object.values(pricing).filter((p): p is number => typeof p === 'number');
    const lowestPrice = priceValues.length > 0 ? Math.min(...priceValues) : 0;
    const highestPrice = priceValues.length > 0 ? Math.max(...priceValues) : 0;
    const priceRange = lowestPrice && highestPrice ? 
        `IDR ${lowestPrice.toLocaleString('id-ID')} - ${highestPrice.toLocaleString('id-ID')}` : 
        'Contact for pricing';

    // Generate services list from pricing
    const services: Service[] = Object.entries(pricing).map(([duration, price]) => ({
        name: `Massage Session`,
        duration: `${duration} min`,
        price: `IDR ${(price as number).toLocaleString('id-ID')}`
    }));

    // Default amenities
    const amenities = ['Professional Therapists', 'Clean Facility', 'Comfortable Environment', 'Quality Service'];

    // Gallery images - using mainImage and fallback images for now
    const galleryImages: GalleryImage[] = [
        {
            imageUrl: place.mainImage || 'https://ik.imagekit.io/7grri5v7d/balineese%20massage%20indonisea.png?updatedAt=1761918521382',
            caption: 'Main Treatment Area',
            description: `Experience professional massage therapy at ${place.name}`
        },
        {
            imageUrl: 'https://ik.imagekit.io/7grri5v7d/indonisea%20bali%20rice%20fields.png?updatedAt=1761741529395',
            caption: 'Relaxation Room',
            description: 'Comfortable relaxation area for pre and post-treatment'
        },
        {
            imageUrl: 'https://ik.imagekit.io/7grri5v7d/jimbaran%20indonisea%20island.png?updatedAt=1761743048054',
            caption: 'Private Treatment Room',
            description: 'Spacious private rooms for your massage sessions'
        },
        {
            imageUrl: 'https://ik.imagekit.io/7grri5v7d/indonisea%20bali%20paddie.png?updatedAt=1761742312003',
            caption: 'Spa Environment',
            description: 'Tranquil and serene environment for ultimate relaxation'
        },
        {
            imageUrl: 'https://ik.imagekit.io/7grri5v7d/jimbaran%20indonisea.png?updatedAt=1761742702514',
            caption: 'Reception Area',
            description: 'Welcome to our professional spa facility'
        }
    ];

    const handleWhatsAppClick = () => {
        const whatsappNumber = place.whatsappNumber || '';
        if (whatsappNumber) {
            window.open(`https://wa.me/${whatsappNumber.replace(/[^0-9]/g, '')}`, '_blank');
        }
    };

    const handleCallClick = () => {
        const phoneNumber = place.whatsappNumber || '';
        if (phoneNumber) {
            window.location.href = `tel:${phoneNumber}`;
        }
    };

    return (
        <div className="min-h-screen bg-gray-50">
            {/* Header */}
            <header className="bg-white shadow-md sticky top-0 z-30">
                <div className="w-full px-4 py-4">
                    <div className="flex items-center justify-between">
                        <button
                            onClick={onBack}
                            className="p-2 hover:bg-gray-100 rounded-lg transition-colors"
                        >
                            <X className="w-6 h-6 text-gray-600" />
                        </button>
                        <h1 className="text-xl font-bold text-gray-800">
                            <span className="text-black">Inda</span>
                            <span className="text-orange-500">Street</span>
                        </h1>
                        <button
                            onClick={() => setIsFavorite(!isFavorite)}
                            className="p-2 hover:bg-gray-100 rounded-lg transition-colors"
                        >
                            <Heart className={`w-6 h-6 ${isFavorite ? 'fill-red-500 text-red-500' : 'text-gray-600'}`} />
                        </button>
                    </div>
                </div>
            </header>

            {/* Main Content */}
            <main className="w-full max-w-6xl mx-auto px-4 py-6 pb-24">
                {/* Hero Image */}
                <div className="bg-white rounded-2xl shadow-lg overflow-hidden mb-6">
                    <div className="relative h-64 md:h-96">
                        <img
                            src={place.mainImage}
                            alt={place.name}
                            className="w-full h-full object-cover"
                        />
                        <div className="absolute top-4 right-4 bg-orange-500 text-white px-4 py-2 rounded-full flex items-center gap-2 shadow-lg">
                            <Star className="w-5 h-5 fill-current" />
                            <span className="font-bold">{place.rating}</span>
                            <span className="text-sm">({place.reviewCount})</span>
                        </div>
                    </div>

                    {/* Basic Info */}
                    <div className="p-6">
                        <h2 className="text-3xl font-bold text-gray-900 mb-3">{place.name}</h2>
                        
                        <div className="flex flex-wrap gap-4 mb-4">
                            <div className="flex items-center gap-2 text-gray-600">
                                <MapPin className="w-5 h-5 text-orange-500" />
                                <span>{place.location}</span>
                            </div>
                            <div className="flex items-center gap-2 text-gray-600">
                                <Clock className="w-5 h-5 text-orange-500" />
                                <span>{place.operatingHours || 'Daily 9:00 AM - 9:00 PM'}</span>
                            </div>
                            <div className="flex items-center gap-2 text-gray-600">
                                <DollarSign className="w-5 h-5 text-orange-500" />
                                <span>{priceRange}</span>
                            </div>
                        </div>

                        <p className="text-gray-700 leading-relaxed mb-6">{place.description || 'Professional massage services with experienced therapists.'}</p>

                        {/* Action Buttons */}
                        <div className="grid grid-cols-2 gap-4">
                            <button
                                onClick={handleWhatsAppClick}
                                className="flex items-center justify-center gap-2 py-3 px-6 bg-green-500 text-white font-bold rounded-lg hover:bg-green-600 transition-colors shadow-lg"
                            >
                                <MessageCircle className="w-5 h-5" />
                                <span>WhatsApp</span>
                            </button>
                            <button
                                onClick={handleCallClick}
                                className="flex items-center justify-center gap-2 py-3 px-6 bg-orange-500 text-white font-bold rounded-lg hover:bg-orange-600 transition-colors shadow-lg"
                            >
                                <Phone className="w-5 h-5" />
                                <span>Call Now</span>
                            </button>
                        </div>
                    </div>
                </div>

                {/* Gallery Section - 5 Images */}
                <div className="bg-white rounded-2xl shadow-lg p-6 mb-6">
                    <h3 className="text-2xl font-bold text-gray-900 mb-4">Gallery</h3>
                    <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-4">
                        {galleryImages.map((image, index) => (
                            <div
                                key={index}
                                onClick={() => setExpandedImage(image)}
                                className="relative aspect-square rounded-lg overflow-hidden cursor-pointer group"
                            >
                                <img
                                    src={image.imageUrl}
                                    alt={image.caption}
                                    className="w-full h-full object-cover transition-transform duration-300 group-hover:scale-110"
                                />
                                <div className="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-40 transition-all duration-300 flex items-center justify-center">
                                    <span className="text-white font-bold opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                                        View
                                    </span>
                                </div>
                                <div className="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black to-transparent p-2">
                                    <p className="text-white text-xs font-semibold truncate">{image.caption}</p>
                                </div>
                            </div>
                        ))}
                    </div>
                </div>

                {/* Services */}
                <div className="bg-white rounded-2xl shadow-lg p-6 mb-6">
                    <h3 className="text-2xl font-bold text-gray-900 mb-4">Services & Pricing</h3>
                    <div className="space-y-3">
                        {services.length > 0 ? services.map((service, index) => (
                            <div key={index} className="flex items-center justify-between py-3 border-b border-gray-200 last:border-0">
                                <div>
                                    <h4 className="font-bold text-gray-900">{service.name}</h4>
                                    <p className="text-sm text-gray-600">{service.duration}</p>
                                </div>
                                <div className="text-orange-600 font-bold">{service.price}</div>
                            </div>
                        )) : (
                            <p className="text-gray-500">Contact us for pricing details</p>
                        )}
                    </div>
                </div>

                {/* Amenities */}
                <div className="bg-white rounded-2xl shadow-lg p-6 mb-6">
                    <h3 className="text-2xl font-bold text-gray-900 mb-4">Amenities</h3>
                    <div className="grid grid-cols-2 md:grid-cols-4 gap-3">
                        {amenities.map((amenity, index) => (
                            <div key={index} className="flex items-center gap-2 text-gray-700">
                                <div className="w-2 h-2 bg-orange-500 rounded-full"></div>
                                <span>{amenity}</span>
                            </div>
                        ))}
                    </div>
                </div>

                {/* Address */}
                <div className="bg-white rounded-2xl shadow-lg p-6">
                    <h3 className="text-2xl font-bold text-gray-900 mb-4">Location</h3>
                    <p className="text-gray-700">{place.location}</p>
                </div>
            </main>

            {/* Expanded Image Modal */}
            {expandedImage && (
                <div
                    className="fixed inset-0 bg-black bg-opacity-90 z-50 flex items-center justify-center p-4"
                    onClick={() => setExpandedImage(null)}
                >
                    <button
                        onClick={() => setExpandedImage(null)}
                        className="absolute top-4 right-4 p-2 bg-white bg-opacity-20 hover:bg-opacity-30 rounded-full transition-colors"
                    >
                        <X className="w-8 h-8 text-white" />
                    </button>
                    
                    <div className="max-w-4xl w-full" onClick={(e) => e.stopPropagation()}>
                        <img
                            src={expandedImage.imageUrl}
                            alt={expandedImage.caption}
                            className="w-full h-auto rounded-lg shadow-2xl mb-4"
                        />
                        <div className="bg-white bg-opacity-10 backdrop-blur-lg rounded-lg p-6">
                            <h3 className="text-2xl font-bold text-white mb-2">{expandedImage.caption}</h3>
                            <p className="text-white text-opacity-90 leading-relaxed">{expandedImage.description}</p>
                        </div>
                    </div>
                </div>
            )}
        </div>
    );
};

export default MassagePlaceProfilePage;
